Salve prof e Alice,

Cercherò di essere sintetico per essere più chiaro possibile; tuttavia, se aveste qualsiasi tipo di dubbio o difficoltà, derivante da qualche mia negligenza riguardante questa breve spiegazione, non fatevi alcun problema a contattarmi (anche su Telegram).
Tengo a precisare che ho appena ripetuto l'intero processo (con CLIENT_ID, TENANT_ID ...) su Linux dato che ho cambiato computer e non ho più a disposizione il vecchio. Ciò mi permette di confermare che sia su Windows (computer vecchio: da cmd o su IDE ad esempio io utilizzavo PyCharm), che su Linux (da terminale shell bash) il funzionamento è lo stesso sia per lanciare il codice che per predisporre la configurazione del client e la registrazione dell'app. Immagino che su Mac non ci siano altri problemi dato che come su Linux stiamo parlando di UNIX: il codice di cui mi parlava, il quale era scomparso all'improvviso, si può reperire tornando al terminale subito dopo esser stati reindirizzati all'autenticazione web (oppure tornando alla console dell'IDE da cui si è lanciato il programma).


Affinchè possiate utilizzare propriamente il programma, vi servono due cose: CLIENT ID e TENANT ID. Dall'allegato vedete come appaiono a me.
Ma per avere questi due dati, bisogna configurare un account CLIENT di Microsoft e poi configurare un tenant. Dopodichè si può registrare l'applicazione tramite cui si può agire sull'account OneDrive su cui viene dato diritto di agire (e quindi prelevare e inviare file, cartelle ecc).

Basta seguire con attenzione questa procedura:

https://docs.microsoft.com/it-it/azure/active-directory/develop/quickstart-register-app

Preciso di settare l'URL della pagina iniziale (dopo aver regiatrato l'applicazione o in fase di registrazione): ad esempio la mia applicazione si chiama OneDriveManager e l'url è https://OneDriveManager.com
Inoltre fondamentale è settare l'URI di reindirizzamento sempre alla stessa pagina, in modo da permettere all'applicazione di "raccogliere" il token generato e procedere.
Bisogna anche settare alcuni permessi per l'applicazione (di cui viene richiesta accettazione nella fase di reindirizzamento al browser)...I permessi richiesti (alcuni forse superflui) li vedete in allegato.


In sintesi il codice python funziona nel seguente modo:

- da shell ad esempio scrivo (dopo aver scaricato i pacchetti richiesti):      python3 share.py file.pdf davide.roznowicz@gmail.com r
(dove file.pdf è il file da prelevare per inviarlo allo studente, poi c'è la mail dello studente e infine r sta per read ma è contemplato anche il permesso w ovvero write)

- Dopo aver verificato la corrispondenza tra CLIENT_ID, TENANT_ID forniti, l'applicazione riesce a entrare in funzione e viene generato un token (che appunto viene salvato nel file token.json) che permette di interagire con l'API di OneDrive (e quindi spostare, inviare file) per 3600 secondi.

- Si viene reindirizzati ad una pagina web in cui si chiede di autorizzare l'app ad accedere ad uno specifico account OneDrive.

- Dopo la conferma, il codice python termina il lavoro sfruttando l'API per prelevare il file.pdf e inviarlo allo studente di cui mail sopra (in questo caso a me : davide.roznowicz@gmail.com) con permesso di read. Se questo processo è andato a buon fine, sul terminale da dove avete fatto run del codice vedrete riposta [200] o [201] e poi conferma che il file è stato inviato correttamente.

- Allo studente arriverà una mail in cui, dopo essersi autenticato con le credenziali universitarie, avrà accesso al file condiviso con la modalità read.



Vi invio anche un codice myshare.py in cui c'è qualche commento e in cui evidenzio dove dovete inserire qualcosa (perchè il corpo centrale del codice funziona e, a meno che non abbiate esigenze particolari, non c'è nemmeno bisogno che lo guardiate).


Saluti e fatemi sapere

Davide

















